"""add unique, not null and default for user columns

Revision ID: 22430bb6af03
Revises: 19c8cb788437
Create Date: 2023-02-22 00:08:19.016515

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '22430bb6af03'
down_revision = '19c8cb788437'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'second_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'password',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('users', 'salt',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.create_unique_constraint(None, 'users', ['phone'])
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'salt',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('users', 'password',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.alter_column('users', 'second_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
